{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Update Page\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"update\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _hoisted_1, _createElementVNode(\"form\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.employee.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.employee.email = $event),\n    placeholder: \"Enter Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.employee.role = $event),\n    placeholder: \"Enter Role\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.role]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.employee.password = $event),\n    placeholder: \"Enter password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.password]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.updateEmployee && _ctx.updateEmployee(...args))\n  }, \"Update Emplaoyee\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEAA,oBAAoB,YAAhB,aAAW;;EACTC,KAAK,EAAC;AAAQ;;;6DAFpBC,aAASC,oBACTC,UAAoB,EACpBJ,oBAOO,QAPPK,UAOO,mBANPL,oBAAkF;IAA3EM,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAAEC,WAAW,EAAC,YAAY;+DAAUC,aAAQ,CAACF,IAAI;iDAAbE,aAAQ,CAACF,IAAI,qBAC/EP,oBAAuE;IAAhEM,IAAI,EAAC,MAAM;+DAAUG,aAAQ,CAACC,KAAK;IAAEF,WAAW,EAAC;iDAA5BC,aAAQ,CAACC,KAAK,qBAC1CV,oBAAqE;IAA9DM,IAAI,EAAC,MAAM;+DAAUG,aAAQ,CAACE,IAAI;IAAEH,WAAW,EAAC;iDAA3BC,aAAQ,CAACE,IAAI,qBACzCX,oBAAiF;IAA1EM,IAAI,EAAC,UAAU;+DAAUG,aAAQ,CAACG,QAAQ;IAAEJ,WAAW,EAAC;iDAA/BC,aAAQ,CAACG,QAAQ,KAEjDZ,oBAA2E;IAAnEM,IAAI,EAAC,QAAQ;IAAMO,OAAK,yCAAEJ,mDAAc;KAAE,kBAAgB","names":["_createElementVNode","class","_createVNode","_component_Header","_hoisted_1","_hoisted_2","type","name","placeholder","_ctx","email","role","password","onClick"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/resto-project1/src/components/Update.vue"],"sourcesContent":["<template>\n<Header/>\n<h1>Update Page</h1>\n<form class=\"update\">\n<input type=\"text\" name=\"name\"  placeholder=\"Enter Name\" v-model=\"employee.name\"/>\n<input type=\"text\" v-model=\"employee.email\" placeholder=\"Enter Email\"/>\n<input type=\"text\" v-model=\"employee.role\" placeholder=\"Enter Role\"/>\n<input type=\"password\" v-model=\"employee.password\" placeholder=\"Enter password\"/>\n\n<button type=\"button\" v-on:click=\"updateEmployee\">Update Emplaoyee</button>\n</form>\n</template>\n<script>\nimport Header from './Header.vue'\nimport axios from 'axios';\nexport default{\n    name:'Update',\n    components:{\n        Header,\n    },\n       data()\n    {\n        return{\n            employee:{\n            name:\"\",\n            email:\"\",\n            role:\"\",\n            password:\"\"\n            }\n        }\n    },   methods:{\n      async  updateEmployee()\n      {\n            // console.warn( this.employee)\nconst result =await axios.get(\"http://localhost:3000/usersById/\"+this.$route.params.id{\n                name:this.employee.name,\n                email:this.employee.email,\n                contact:this.employee.contact,\n            });\n            if(result.status==200)\n            {\n                this.$router.push({name:'Home'});\n            }\n        }\n    \n    },\n \n    async mounted()\n    {\n        let user =localStorage.getItem('user-info')\n        \n       console.warn(this.$route.params.id) \n       const result =await axios.get(\"http://localhost:3000/usersById/\"+this.$route.params.id);\n       console.warn(result.data.name)\n       this.employee=result.data;\n    }\n    }\n\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}