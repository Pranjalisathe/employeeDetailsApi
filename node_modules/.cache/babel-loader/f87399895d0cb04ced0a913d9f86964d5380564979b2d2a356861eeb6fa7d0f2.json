{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Update Page\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = (...args) => _ctx.sub && _ctx.sub(...args)),\n    class: \"update\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.employee.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.employee.email = $event),\n    placeholder: \"Enter Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.employee.role = $event),\n    placeholder: \"Enter Role\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.role]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.employee.password = $event),\n    placeholder: \"Enter password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.employee.password]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.updateEmployee && _ctx.updateEmployee(...args))\n  }, \"Update Emplaoyee\")], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEAA,oBAAoB,YAAhB,aAAW;;;;6DADfC,aAASC,oBACTC,UAAoB,EACpBH,oBAOO;IAPAI,QAAM,yCAAEC,6BAAG;IAAEC,KAAK,EAAC;sBAC1BN,oBAAkF;IAA3EO,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAAEC,WAAW,EAAC,YAAY;+DAAUJ,aAAQ,CAACG,IAAI;iDAAbH,aAAQ,CAACG,IAAI,qBAC/ER,oBAAuE;IAAhEO,IAAI,EAAC,MAAM;+DAAUF,aAAQ,CAACK,KAAK;IAAED,WAAW,EAAC;iDAA5BJ,aAAQ,CAACK,KAAK,qBAC1CV,oBAAqE;IAA9DO,IAAI,EAAC,MAAM;+DAAUF,aAAQ,CAACM,IAAI;IAAEF,WAAW,EAAC;iDAA3BJ,aAAQ,CAACM,IAAI,qBACzCX,oBAAiF;IAA1EO,IAAI,EAAC,UAAU;+DAAUF,aAAQ,CAACO,QAAQ;IAAEH,WAAW,EAAC;iDAA/BJ,aAAQ,CAACO,QAAQ,KAEjDZ,oBAA2E;IAAnEO,IAAI,EAAC,QAAQ;IAAMM,OAAK,yCAAER,mDAAc;KAAE,kBAAgB","names":["_createElementVNode","_createVNode","_component_Header","_hoisted_1","onSubmit","_ctx","class","type","name","placeholder","email","role","password","onClick"],"sourceRoot":"","sources":["/home/pranjalisathe/Desktop/resto-project1/src/components/Update.vue"],"sourcesContent":["<template>\n<Header/>\n<h1>Update Page</h1>\n<form @submit=\"sub\" class=\"update\" >\n<input type=\"text\" name=\"name\"  placeholder=\"Enter Name\" v-model=\"employee.name\"/>\n<input type=\"text\" v-model=\"employee.email\" placeholder=\"Enter Email\"/>\n<input type=\"text\" v-model=\"employee.role\" placeholder=\"Enter Role\"/>\n<input type=\"password\" v-model=\"employee.password\" placeholder=\"Enter password\"/>\n\n<button type=\"submit\" v-on:click=\"updateEmployee\">Update Emplaoyee</button>\n</form>\n</template>\n<script>\nimport Header from './Header.vue'\nimport axios from 'axios';\nexport default{\n    name:'Update',\n    components:{\n        Header,\n    },\n       data()\n    {\n        return{\n            employee:{\n            name:\"\",\n            email:\"\",\n            role:\"\",\n            password:\"\"\n            },\n             error:[]\n        }\n    },   methods:{\n      async  updateEmployee()\n      {\n            // console.warn( this.employee)\n              const result =await axios.put(\"http://localhost:3000/usersById/\"+this.$route.params.id,{\n                name:this.employee.name,\n                email:this.employee.email,\n                role:this.employee.role,\n                password:this.employee.password,\n            });\n            if(result.status==200 && this.error.length==0)\n            {\n                this.$router.push({name:'Home'});\n                 alert(\"Employee updated successfully!\")\n            }\n        },\n         sub(e){\n            \n          this.error=[];\n         \n          if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)))\n          {\n            this.error.push(\"invalid email format\");\n          }\n          \n           if(!this.employee.email)\n          {\n            this.error.push(\"Email\");\n            \n          }\n           if(!this.employee.role)\n          {\n            this.error.push(\"Role\");\n            \n          }\n          if(!this..employeepassword)\n          {\n            this.error.push(\"Password\");\n         \n          }\n       if(this.error.length!=0)\n       {\n       \n          alert(\"Please enter User \"+this.error);\n\n       }\n          e.preventDefault();\n        },\n    \n    },\n \n    async mounted()\n    {\n        let user =localStorage.getItem('user-info')\n        \n       console.warn(this.$route.params.id) \n       const result =await axios.get(\"http://localhost:3000/usersById/\"+this.$route.params.id);\n       console.warn(result.data.name)\n       this.employee=result.data;\n    }\n    }\n\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}